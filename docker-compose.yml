version: "3.6"

services:
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - ./homeassistant/data:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    privileged: true
    networks:
      cnetwork:
        ipv4_address: 10.100.1.11

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    privileged: true
    networks:
      cnetwork:
        ipv4_address: 10.100.1.12

  wireguard:
    container_name: wireguard
    image: linuxserver/wireguard:latest
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv4.conf.all.src_valid_mark=1
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/Istanbul
    ports:
      - "9091:9091/tcp"
    volumes:
      - ./wireguard/data:/config
      - /lib/modules:/lib/modules
    restart: always
    networks:
      cnetwork:
        ipv4_address: 10.100.1.13

  transmission:
    container_name: transmission
    image: linuxserver/transmission:latest
    depends_on:
      - wireguard
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/Istanbul
      - USER=--REDACTEDREDACTED--
      - PASS=--REDACTEDREDACTED--
      - PEERPORT=54914
    volumes:
      - ./transmission/data:/config
      - hdd:/downloads
    restart: always
    network_mode: "service:wireguard"

  adguard:
    container_name: adguard
    image: adguard/adguardhome:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "80:80/tcp"
      - "443:443/tcp"
      - "443:443/udp"
      - "3000:3000/tcp"
      - "853:853/tcp"
      - "853:853/udp"
      - "784:784/udp"
      - "8853:8853/udp"
      - "5443:5443/tcp"
      - "5443:5443/udp"
    environment:
      TZ: 'Europe/Istanbul'
    volumes:
      - './adguard/data/work:/opt/adguardhome/work'
      - './adguard/data/conf:/opt/adguardhome/conf'
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.100.1.14

  cloudflared:
    image: cloudflare/cloudflared:latest #update the verion where necessary
    container_name: cloudflared
    restart: unless-stopped
    command:
      - tunnel
      - --no-autoupdate
      - run
      - --token
      - --REDACTEDREDACTED--

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    ports:
      - 9443:9443
    volumes:
      - ./portainer/data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.100.1.15

  homebox:
    image: ghcr.io/hay-kot/homebox:latest
    container_name: homebox
    restart: unless-stopped
    environment:
    - HBOX_LOG_LEVEL=info
    - HBOX_LOG_FORMAT=text
    - HBOX_WEB_MAX_UPLOAD_SIZE=10
    volumes:
      - ./homebox/data:/data/
    ports:
      - 7745:7745
    networks:
      cnetwork:
        ipv4_address: 10.100.1.16

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
    volumes:
      - ./bazarr/data/config:/config
      - hdd:/movies
    ports:
      - 6767:6767
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.100.1.17

  calibre-web:
    image: lscr.io/linuxserver/calibre-web:latest
    container_name: calibre-web
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
      - DOCKER_MODS=linuxserver/mods:universal-calibre #optional
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1 #optional
    volumes:
      - ./calibre-web/data:/config
      - hdd:/books
    ports:
      - 8083:8083
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.100.1.18

  mqtt:
    container_name: mqtt
    image: eclipse-mosquitto:2.0
    restart: unless-stopped
    volumes:
      - "./mqtt/mosquitto-data:/mosquitto"
    ports:
      - "1883:1883"
      - "9001:9001"
    command: "mosquitto -c /mosquitto-no-auth.conf"
    networks:
      cnetwork:
        ipv4_address: 10.100.1.19

  zigbee2mqtt:
    container_name: zigbee2mqtt
    restart: unless-stopped
    image: koenkk/zigbee2mqtt
    volumes:
      - ./zigbee2mqtt/zigbee2mqtt-data:/app/data
      - /run/udev:/run/udev:ro
    ports:
      - 8080:8080
    environment:
      - TZ=Europe/Istanbul
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
    networks:
      cnetwork:
        ipv4_address: 10.100.1.20

  duplicati:
    image: lscr.io/linuxserver/duplicati:latest
    container_name: duplicati
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
      - CLI_ARGS=--no-hosted-server#optional
    volumes:
      - ./duplicati/data/config:/config
      - ./duplicati/data/backups:/backups
      - ./duplicati/data/source:/source
    ports:
      - 8200:8200
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.100.1.21

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - WEBUI_PORT=8080
    volumes:
      - ./qbittorrent/data/config:/config
      - hdd:/downloads
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.100.1.22

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
      - JELLYFIN_PublishedServerUrl=10.0.1.23 #optional
    volumes:
      - ./jellyfin/data:/config
      - hdd:/data/tvshows
      - hdd:/data/movies
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.100.1.23

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
    volumes:
      - ./lidarr/data/config:/config
      - hdd:/music #optional
      - hdd:/downloads #optional
    ports:
      - 8686:8686
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.100.1.24

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
      - VERSION=docker
      - PLEX_CLAIM= #optional
    volumes:
      - ./plex/data:/config
      - hdd:/tv
      - hdd:/movies
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.100.1.25

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
    volumes:
      - ./prowlarr/data:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.100.1.26

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
    volumes:
      - ./radarr/data:/config
      - hdd:/movies #optional
    ports:
      - 7878:7878
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.100.1.27

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
    volumes:
      - ./sonarr/data:/config
      - hdd:/tv #optional
    ports:
      - 8989:8989
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.100.1.28

  jdownloader-2:
    container_name: jdownloader-2
    image: jlesage/jdownloader-2
    environment:
      - TZ=Europe/Istanbul
      - VNC_PASSWORD=--REDACTEDREDACTED--
    ports:
      - 5800:5800
    volumes:
      - ./jdownloader-2:/config
      - hdd:/output
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.100.1.29

  nzbget:
    image: lscr.io/linuxserver/nzbget:latest
    container_name: nzbget
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
      - NZBGET_USER=--REDACTEDREDACTED-- #optional
      - NZBGET_PASS=--REDACTEDREDACTED-- #optional
    volumes:
      - ./nzbget/data:/config
      - hdd:/downloads #optional
    ports:
      - 6789:6789
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.100.1.30

  speedtest-tracker:
    image: 'ghcr.io/alexjustesen/speedtest-tracker:latest'
    container_name: speedtest-tracker
    depends_on:
      - speedtest-database
    ports:
      - '8080:80'
      - '8443:443'
    environment:
      - PUID=1000
      - PGID=1000
      - DB_CONNECTION=pgsql
      - DB_HOST=speedtest-database
      - DB_PORT=5432
      - DB_DATABASE=--REDACTEDREDACTED--
      - DB_USERNAME=--REDACTEDREDACTED--
      - DB_PASSWORD=--REDACTEDREDACTED--
      - TZ=Europe/Istanbul
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - './speedtest-tracker:/config'
      - './speedtest-tracker/web:/etc/ssl/web'
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.100.1.31

  speedtest-database:
    image: postgres:15
    container_name: speedtest-database
    restart: always
    environment:
      - POSTGRES_DB=--REDACTEDREDACTED--
      - POSTGRES_USER=--REDACTEDREDACTED--
      - POSTGRES_PASSWORD=--REDACTEDREDACTED--
    volumes:
      - speedtest-db:/var/lib/postgresql/data
    networks:
      cnetwork:
        ipv4_address: 10.100.1.32

  nginx:
    container_name: nginx
    image: nginx:alpine
    ports:
      - 8080:80
    volumes:
      - ./nginx/www:/srv/www
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.100.2.10

  code-server:
    image: lscr.io/linuxserver/code-server:latest
    container_name: code-server
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
      - PASSWORD=--REDACTEDREDACTED--
      - SUDO_PASSWORD=--REDACTEDREDACTED--
      - PROXY_DOMAIN=code-server.nergiz.page #optional
      - DEFAULT_WORKSPACE=/ #optional
    volumes:
      - hdd:/config/
    ports:
      - 8443:8443
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.100.2.13

  chromium:
    image: lscr.io/linuxserver/chromium:latest
    container_name: chromium
    security_opt:
      - seccomp:unconfined #optional
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - CHROME_CLI=https://www.linuxserver.io/ #optional
    volumes:
      - ./chromium/config:/config
      - hdd:/config/hdd
    ports:
      - 3000:3000
      - 3001:3001
    shm_size: "4gb"
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.100.2.15

networks:
  cnetwork:
    name: cnetwork
    driver: macvlan
    driver_opts:
      parent: eth0
    ipam:
      driver: default
      config:
        - subnet: 10.100.1.0/16
          gateway: 10.100.0.1

volumes:
  hdd:
    name: hdd
    driver: local
    driver_opts:
      type: ext4
      device: /dev/sda
      #o: bind
  speedtest-db: