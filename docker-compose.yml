version: "3.6"

services:
  nginxproxymanager:
    container_name: nginx-proxy-manager
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80' # Public HTTP Port
      - '443:443' # Public HTTPS Port
      - '81:81' # Admin Web Port
    volumes:
      - ./nginxproxymanager/data:/data
      - ./letsencrypt:/etc/letsencrypt
    networks:
      cnetwork:
        ipv4_address: 10.0.1.10

  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - ./homeassistant/data:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    privileged: true
    networks:
      cnetwork:
        ipv4_address: 10.0.1.11

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "80:80/tcp"
    environment:
      TZ: 'Europe/Istanbul'

    volumes:
      - './pihole/data:/etc/pihole'
      - './etc-dnsmasq.d:/etc/dnsmasq.d'

    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.0.1.12

  wireguard:
    container_name: wireguard
    image: linuxserver/wireguard:latest
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv4.conf.all.src_valid_mark=1
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/Istanbul
    ports:
      - "9091:9091/tcp"
    volumes:
      - ./wireguard:/config
      - /lib/modules:/lib/modules
    restart: always
    networks:
      cnetwork:
        ipv4_address: 10.0.1.13

  transmission:
    container_name: transmission
    image: linuxserver/transmission:latest
    depends_on:
      - wireguard
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/Istanbul
      - USER=phyesix
      - PASS=phyesix
      - PEERPORT=54914
    volumes:
      - ./transmission/transmission-config:/config
      - /media/hdd/torrent/downloads:/downloads
      - /media/hdd/torrent/watch:/watch
    restart: always
    network_mode: "service:wireguard"

  adguard:
    container_name: adguard
    image: adguard/adguardhome:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "80:80/tcp"
      - "443:443/tcp"
      - "443:443/udp"
      - "3000:3000/tcp"
      - "853:853/tcp"
      - "853:853/udp"
      - "784:784/udp"
      - "8853:8853/udp"
      - "5443:5443/tcp"
      - "5443:5443/udp"
    environment:
      TZ: 'Europe/Istanbul'

    volumes:
      - './adguard/work:/opt/adguardhome/work'
      - './adguard/conf:/opt/adguardhome/conf'

    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.0.1.14

  cloudflared:
    image: cloudflare/cloudflared:latest #update the verion where necessary
    container_name: cloudflared
    restart: unless-stopped
    command:
      - tunnel
      - --no-autoupdate
      - run
      - --token
      - TOKEN

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    ports:
      - 9443:9443
    volumes:
      - ./portainer/data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.0.1.15

  homebox:
    image: ghcr.io/hay-kot/homebox:latest
    container_name: homebox
    restart: unless-stopped
    environment:
    - HBOX_LOG_LEVEL=info
    - HBOX_LOG_FORMAT=text
    - HBOX_WEB_MAX_UPLOAD_SIZE=10
    volumes:
      - ./homebox/data:/data/
    ports:
      - 7745:7745
    networks:
      cnetwork:
        ipv4_address: 10.0.1.16

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
    volumes:
      - ./bazarr/config:/config
      - ./bazarr/movies:/movies
      - ./bazarr/tv:/tv
    ports:
      - 6767:6767
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.0.1.17

  calibre-web:
    image: lscr.io/linuxserver/calibre-web:latest
    container_name: calibre-web
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
      - DOCKER_MODS=linuxserver/mods:universal-calibre #optional
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1 #optional
    volumes:
      - ./calibre-web/data:/config
      - ./calibre-web/library:/books
    ports:
      - 8083:8083
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.0.1.18
  
  deluge:
    image: lscr.io/linuxserver/deluge:latest
    container_name: deluge
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
      - DELUGE_LOGLEVEL=error #optional
    volumes:
      - ./deluge/config:/config
      - ./deluge/downloads:/downloads
    ports:
      - 8112:8112
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.0.1.19

  doplarr:
    image: lscr.io/linuxserver/doplarr:latest
    container_name: doplarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
      - DISCORD__TOKEN=
      - OVERSEERR__API=
      - OVERSEERR__URL=http://localhost:5055
      - RADARR__API=
      - RADARR__URL=http://localhost:7878
      - SONARR__API=
      - SONARR__URL=http://localhost:8989
      - DISCORD__MAX_RESULTS=25 #optional
      - DISCORD__REQUESTED_MSG_STYLE=:plain #optional
      - SONARR__QUALITY_PROFILE= #optional
      - RADARR__QUALITY_PROFILE= #optional
      - SONARR__ROOTFOLDER= #optional
      - RADARR__ROOTFOLDER= #optional
      - SONARR__LANGUAGE_PROFILE= #optional
      - OVERSEERR__DEFAULT_ID= #optional
      - PARTIAL_SEASONS=true #optional
      - LOG_LEVEL=:info #optional
      - JAVA_OPTS= #optional
    volumes:
      - ./doplarr/config:/config
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.0.1.20

  duplicati:
    image: lscr.io/linuxserver/duplicati:latest
    container_name: duplicati
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
      - CLI_ARGS= #optional
    volumes:
      - ./duplicati/config:/config
      - ./duplicati/backups:/backups
      - ./duplicati/source:/source
    ports:
      - 8200:8200
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.0.1.21

  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
      - AUTO_UPDATE=true #optional
      - RUN_OPTS= #optional
    volumes:
      - ./jackett/data:/config
      - ./jackett/blackhole:/downloads
    ports:
      - 9117:9117
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.0.1.22

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
      - JELLYFIN_PublishedServerUrl=192.168.0.5 #optional
    volumes:
      - ./jellyfin/library:/config
      - ./jellyfin/tvseries:/data/tvshows
      - ./jellyfin/movies:/data/movies
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.0.1.23

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
    volumes:
      - ./lidarr/appdata/config:/config
      - ./lidarr/music:/music #optional
      - ./lidarr/downloads:/downloads #optional
    ports:
      - 8686:8686
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.0.1.24
  
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    #network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
      - VERSION=docker
      - PLEX_CLAIM= #optional
    volumes:
      - ./plex/library:/config
      - ./plex/tvseries:/tv
      - ./plex/movies:/movies
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.0.1.25

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
    volumes:
      - ./prowlarr/data:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.0.1.26

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
    volumes:
      - ./radarr/data:/config
      - ./radarr/movies:/movies #optional
      - ./radarr/downloadclient-downloads:/downloads #optional
    ports:
      - 7878:7878
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.0.1.27

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
    volumes:
      - ./sonarr/data:/config
      - ./sonarr/tvseries:/tv #optional
      - ./sonarr/downloadclient-downloads:/downloads #optional
    ports:
      - 8989:8989
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.0.1.28

  nginx:
    container_name: nginx
    image: nginx:alpine
    ports:
      - 8080:80
    volumes:
      - ./nginx/www:/srv/www
    networks:
      cnetwork:
        ipv4_address: 10.0.2.10

  phpfpm:
    container_name: phpfpm
    image: php:fpm-alpine
    volumes:
      - ./phpfpm/www:/srv/www
    networks:
      cnetwork:
        ipv4_address: 10.0.2.11

  chromium:
    image: lscr.io/linuxserver/chromium:latest
    container_name: chromium
    security_opt:
      - seccomp:unconfined #optional
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
      - CHROME_CLI=https://www.google.com/ #optional
    volumes:
      - ./chromium/config:/config
    ports:
      - 3000:3000
      - 3001:3001
    shm_size: "1gb"
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.0.2.12

  code-server:
    image: lscr.io/linuxserver/code-server:latest
    container_name: code-server
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
      - PASSWORD=password #optional
      - HASHED_PASSWORD= #optional
      - SUDO_PASSWORD=password #optional
      - SUDO_PASSWORD_HASH= #optional
      - PROXY_DOMAIN=code-server.my.domain #optional
      - DEFAULT_WORKSPACE=/config/workspace #optional
    volumes:
      - ./code-server/config:/config
    ports:
      - 8443:8443
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.0.2.13

  firefox:
    image: lscr.io/linuxserver/firefox:latest
    container_name: firefox
    security_opt:
      - seccomp:unconfined #optional
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
    volumes:
      - ./firefox/config:/config
    ports:
      - 3000:3000
      - 3001:3001
    shm_size: "1gb"
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.0.2.14

networks:
  cnetwork:
    name: cnetwork
    driver: macvlan
    driver_opts:
      parent: eth0
    ipam:
      driver: default
      config:
        - subnet: 10.0.1.0/16
          gateway: 10.0.0.2
