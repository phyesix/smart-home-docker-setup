version: "3.6"

services:
  nginxproxymanager:
    container_name: nginx-proxy-manager
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80' # Public HTTP Port
      - '443:443' # Public HTTPS Port
      - '81:81' # Admin Web Port
    volumes:
      - ./nginxproxymanager/data:/data
      - ./letsencrypt:/etc/letsencrypt
    networks:
      cnetwork:
        ipv4_address: 10.0.1.10

  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - ./homeassistant/data:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    privileged: true
    networks:
      cnetwork:
        ipv4_address: 10.0.1.11

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "80:80/tcp"
    environment:
      TZ: 'America/Chicago'

    volumes:
      - './pihole/data:/etc/pihole'
      - './etc-dnsmasq.d:/etc/dnsmasq.d'

    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.0.1.12

  wireguard:
    container_name: wireguard
    image: linuxserver/wireguard:latest
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv4.conf.all.src_valid_mark=1
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/Istanbul
    ports:
      - "9091:9091/tcp"
    volumes:
      - ./wireguard:/config
      - /lib/modules:/lib/modules
    restart: always
    networks:
      cnetwork:
        ipv4_address: 10.0.1.13

  transmission:
    container_name: transmission
    image: linuxserver/transmission:latest
    depends_on:
      - wireguard
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/Istanbul
      - TRANSMISSION_WEB_HOME=/transmissionic/
      - USER=phyesix
      - PASS=phyesix
      - PEERPORT=54914
    volumes:
      - ./transmission/transmission-config:/config
      - /media/nas/torrent/downloads:/downloads
      - /media/nas/torrent/watch:/watch
    restart: always
    network_mode: "service:wireguard"

  adguard:
    container_name: adguard
    image: adguard/adguardhome:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "80:80/tcp"
      - "443:443/tcp"
      - "443:443/udp"
      - "3000:3000/tcp"
      - "853:853/tcp"
      - "853:853/udp"
      - "784:784/udp"
      - "8853:8853/udp"
      - "5443:5443/tcp"
      - "5443:5443/udp"
    environment:
      TZ: 'America/Chicago'

    volumes:
      - './adguard/work:/opt/adguardhome/work'
      - './adguard/conf:/opt/adguardhome/conf'

    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.0.1.14

  cloudflared:
    image: cloudflare/cloudflared:latest #update the verion where necessary
    container_name: cloudflared
    restart: unless-stopped
    command:
      - tunnel
      - --no-autoupdate
      - run
      - --token
      - TOKENTOKENTOKEN

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    ports:
      - 9443:9443
    volumes:
      - ./portainer/data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      cnetwork:
        ipv4_address: 10.0.1.15

  homebox:
    image: ghcr.io/hay-kot/homebox:latest
    container_name: homebox
    restart: always
    environment:
    - HBOX_LOG_LEVEL=info
    - HBOX_LOG_FORMAT=text
    - HBOX_WEB_MAX_UPLOAD_SIZE=10
    volumes:
      - ./homebox-data:/data/
    ports:
      - 3100:7745
    networks:
      cnetwork:
        ipv4_address: 10.0.1.16

networks:
  cnetwork:
    driver: macvlan
    driver_opts:
      parent: eth0
    ipam:
      driver: default
      config:
        - subnet: 10.0.1.0/16
          gateway: 10.0.0.2
